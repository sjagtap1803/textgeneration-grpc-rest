//Toy gRPC project

syntax = "proto3";

option go_package = "./grpc-gateway";

package textgeneration;


// The textgeneration service definition.
service TextGeneration {
    // Sends a respone containing model generated text and expects a single response from the server
    rpc ProcessTextGen(TextGenPrompt) returns (TextGenResponse) {}

    // Sends a stream of 3 responses for a single prompt request
    rpc ProcessTextGenMultiStream(TextGenPrompt)  returns (stream TextGenResponse) {}

    // Sends a single response for a stream of prompt requests
    rpc ProcessTextGenStreamRequest(stream TextGenPrompt) returns (TextGenResponse) {}

    // Sends a stream of responses for a stream of requests
    rpc ProcessTextGenStream(stream TextGenPrompt) returns (stream TextGenResponse) {}

    // Upload a text file with input prompt and receive a response
    rpc SingleFileUpload(FileUpload) returns (TextGenResponse) {}

    // Upload multiple files and get back a stream of responses
    rpc MultiFileUpload(stream FileUpload) returns (stream TextGenResponse) {}
}

// request message containing the input prompt
message TextGenPrompt {
    string prompt = 1;
    bool cleanup = 2; 
}

// response message containing output generated by the model
message TextGenResponse {
    string text = 1;
}

// request message for uploading a file
message FileUpload {
    oneof upload_oneof {
        string filename = 1;
        bytes filedata = 2;
    }
}